<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fly.demo.dao.ArticleMapper">
<!--    ArticleMapper.xml 进行额外的补充，避免写在同一个xml文件中，因为 自动生成代码那个，很容易将自己写的代码进行覆盖了-->
<!--    1、注意namespace表示命名空间，指定要与 ArticleMapper.xml 中的namespace相同-->
<!--    2、统一用 com.fly.demo.dao.ArticleMapper，也就是 BoardMapper-->
<!--    3、不同的映射文件指定了相同的namespace后，定义的所有用id或name标识的结果集映射都可以在不同的文件中共享-->

<!--    自定义结果集的映射-->
    <resultMap id="AllInfoResultMap" type="com.fly.demo.model.Article" extends="ResultMapWithBLOBs">
<!--        关联的用户的映射-->
        <association property="user" resultMap="com.fly.demo.dao.UserMapper.BaseResultMap" columnPrefix="u_"/>
<!--        关联板块的映射-->
        <association property="board" resultMap="com.fly.demo.dao.BoardMapper.BaseResultMap" columnPrefix="b_"/>
    </resultMap>
    <select id="selectAll" resultMap="AllInfoResultMap">
        select
            u.id as u_id, u.avatarUrl as u_avatarUrl, u.nickname as u_nickname,
            a.id, a.boardId, a.userId, a.title, a.visitCount, a.replyCount, a.likeCount, a.state, a.createTime, a.updateTime
        from
            t_article a, t_user u
        where
            a.userId = u.id and a.deleteState = 0
        order by
            a.createTime desc;
    </select>

    <select id="selectAllByBoardId" resultMap="AllInfoResultMap" parameterType="java.lang.Long">
        select
            u.id as u_id, u.avatarUrl as u_avatarUrl, u.nickname as u_nickname,
            a.id, a.boardId, a.userId, a.title, a.visitCount, a.replyCount, a.likeCount, a.state, a.createTime, a.updateTime
        from
            t_article a, t_user u
        where
            a.userId = u.id and a.deleteState = 0 and a.boardId = #{boardId,jdbcType=BIGINT}
        order by
            a.createTime desc;
    </select>

    <select id="selectDetailById" resultMap="AllInfoResultMap" parameterType="java.lang.Long">
        select
            u.id as u_id, u.avatarUrl as u_avatarUrl, u.nickname as u_nickname, u.gender as t_gender, u.isAdmin as t_isAdmin, u.state as u_state, u.deleteState as u_deleteState,
            b.id as b_id, b.name as b_name, b.state as b_state,
            a.id, a.boardId, a.userId, a.title, a.content, a.visitCount, a.replyCount, a.likeCount, a.state, a.createTime, a.updateTime
        from
            t_article a, t_user u, t_board b
        where
            a.userId = u.id and a.deleteState = 0 and a.boardId = b.id and a.id = #{id, jdbcType=BIGINT}
    </select>

<!--    根据用户id查询帖子列表-->
    <select id="selectByUserId" resultMap="AllInfoResultMap" parameterType="java.lang.Long">
        select
            b.id as b_id, b.name as b_name,
            a.id, a.boardId, a.userId, a.title, a.content, a.visitCount, a.replyCount, a.likeCount, a.state, a.createTime, a.updateTime
        from
            t_article a, t_board b
        where a.boardId = b.id and a.deleteState = 0 and a.userId = #{userId,jdbcType=BIGINT}
        order by
            a.createTime desc
    </select>
</mapper>